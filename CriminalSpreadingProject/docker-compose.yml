version: '3'

services:

  # scheduler & monitoring service
  airflow-webserver:
    hostname: airflow
    container_name: airflow_container
    image: docker pull apache/airflow==2.3.3
    ports:
      - '8080:8080'
    networks:
      - data
    volumes:
      - ./airflow/data:/usr/local/airflow/data
      - ./airflow/logs:/usr/local/airflow/logs
      - ./airflow/dags:/usr/local/airflow/dags
      - ./airflow/requirements/requirements.txt:/requirements.txt
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: on-failure
  
  # relational database
    postgres:
        hostname: postgres
        container_name: postgres_container
        image: 'postgres:14-bullseye' 
        environment:
            POSTGRES_USER: 'postgres'
            POSTGRES_PASSWORD: 'postgres'
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        ports:
            - "5432:5432"
        networks:
            - data
        restart: on-failure
        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 30s
            timeout: 20s
            retries: 3
    
    # database administration tool
    pgadmin:
        hostname: pgadmin
        container_name: pgadmin_container
        image: 'dpage/pgadmin4:6.13'  
        environment:
            PGADMIN_DEFAULT_EMAIL: 'pgadmin4@pgadmin.org'
            PGADMIN_DEFAULT_PASSWORD: 'admin'
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin:/var/lib/pgadmin
        ports:
            - "5050:80"
        networks:
            - data
        restart: on-failure
        healthcheck:
            test: ["CMD", "curl", "-f", "http://mypgadmin:80/misc/ping"]
            interval: 30s
            timeout: 20s
            retries: 3

    # object storage
    minio:
        hostname: minio
        container_name: minio_container
        image: 'bitnami/minio:2022'
        environment:
            MINIO_ACCESS_KEY: minio_admin
            MINIO_SECRET_KEY: minio_password
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - './minio/data:/data'
        networks:
            - data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://myminio:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

volumes:
    airflow-data:
    postgres:
    pgadmin:

networks:
    data:
        driver: bridge

