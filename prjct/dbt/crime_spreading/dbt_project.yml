
name: 'crime_spreading'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'plsv'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  crime_spreading:
    +materialized: table
    staging:      
      +materialized: table
      +schema: staging_crimespread
    view:
      +materialized: view
      +schema: staging_crimespread

seeds:
  crime_spreading:
    +enabled: true
    +schema: seed_data
    uscities:
      +column_types:
        city: text
        city_ascii: text
        state_id: text
        state_name: text
        county_fips: varchar(5)
        county_name: text
        lat: float8
        lng: float8
        population: int4
        density: float8
        source: text
        military: bool
        incorporated: bool
        timezone: text
        ranking: int4
        zips: text
        id: int4
    states_202210250008:
      +column_types:
        state: text
        state_code: text
    cities_extended_202210242353:
      +column_types:
        city: text
        state_code: text
        zip: int4
        latitude: float8
        longitude: float8
        county: text
    upsale:
      +column_types:
        ID: int
        DT: date
        Manager_ID: int
        CLIENT_ID: int
        CALL_ID: int
        FACTOR_ID: int
        RESULT: bool
    managers:
      +column_types:
        ID: int
        LOGIN: text
        NAME: text
        OFFICE: int

